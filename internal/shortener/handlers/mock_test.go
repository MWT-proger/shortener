// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/MWT-proger/shortener/internal/shortener/handlers (interfaces: ShortenerServicer)
//
// Generated by this command:
//
//	mockgen -destination mock_handlers_test.go -package handlers github.com/MWT-proger/shortener/internal/shortener/handlers ShortenerServicer
//

// Package handlers is a generated GoMock package.
package handlers

import (
	context "context"
	reflect "reflect"

	models "github.com/MWT-proger/shortener/internal/shortener/models"
	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MockShortenerServicer is a mock of ShortenerServicer interface.
type MockShortenerServicer struct {
	ctrl     *gomock.Controller
	recorder *MockShortenerServicerMockRecorder
}

// MockShortenerServicerMockRecorder is the mock recorder for MockShortenerServicer.
type MockShortenerServicerMockRecorder struct {
	mock *MockShortenerServicer
}

// NewMockShortenerServicer creates a new mock instance.
func NewMockShortenerServicer(ctrl *gomock.Controller) *MockShortenerServicer {
	mock := &MockShortenerServicer{ctrl: ctrl}
	mock.recorder = &MockShortenerServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortenerServicer) EXPECT() *MockShortenerServicerMockRecorder {
	return m.recorder
}

// DeleteListUserURLs mocks base method.
func (m *MockShortenerServicer) DeleteListUserURLs(arg0 context.Context, arg1 uuid.UUID, arg2 []string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteListUserURLs", arg0, arg1, arg2)
}

// DeleteListUserURLs indicates an expected call of DeleteListUserURLs.
func (mr *MockShortenerServicerMockRecorder) DeleteListUserURLs(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteListUserURLs", reflect.TypeOf((*MockShortenerServicer)(nil).DeleteListUserURLs), arg0, arg1, arg2)
}

// GenerateMultyShortURL mocks base method.
func (m *MockShortenerServicer) GenerateMultyShortURL(arg0 context.Context, arg1 uuid.UUID, arg2 []models.JSONShortURL, arg3 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateMultyShortURL", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// GenerateMultyShortURL indicates an expected call of GenerateMultyShortURL.
func (mr *MockShortenerServicerMockRecorder) GenerateMultyShortURL(arg0, arg1, arg2, arg3 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateMultyShortURL", reflect.TypeOf((*MockShortenerServicer)(nil).GenerateMultyShortURL), arg0, arg1, arg2, arg3)
}

// GenerateShortURL mocks base method.
func (m *MockShortenerServicer) GenerateShortURL(arg0 context.Context, arg1 uuid.UUID, arg2, arg3 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateShortURL", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateShortURL indicates an expected call of GenerateShortURL.
func (mr *MockShortenerServicerMockRecorder) GenerateShortURL(arg0, arg1, arg2, arg3 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateShortURL", reflect.TypeOf((*MockShortenerServicer)(nil).GenerateShortURL), arg0, arg1, arg2, arg3)
}

// GetFullURLByShortKey mocks base method.
func (m *MockShortenerServicer) GetFullURLByShortKey(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFullURLByShortKey", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFullURLByShortKey indicates an expected call of GetFullURLByShortKey.
func (mr *MockShortenerServicerMockRecorder) GetFullURLByShortKey(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFullURLByShortKey", reflect.TypeOf((*MockShortenerServicer)(nil).GetFullURLByShortKey), arg0, arg1)
}

// GetListUserURLs mocks base method.
func (m *MockShortenerServicer) GetListUserURLs(arg0 context.Context, arg1 uuid.UUID, arg2 string) ([]*models.JSONShortURL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListUserURLs", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*models.JSONShortURL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetListUserURLs indicates an expected call of GetListUserURLs.
func (mr *MockShortenerServicerMockRecorder) GetListUserURLs(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListUserURLs", reflect.TypeOf((*MockShortenerServicer)(nil).GetListUserURLs), arg0, arg1, arg2)
}

// PingStorage mocks base method.
func (m *MockShortenerServicer) PingStorage() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingStorage")
	ret0, _ := ret[0].(bool)
	return ret0
}

// PingStorage indicates an expected call of PingStorage.
func (mr *MockShortenerServicerMockRecorder) PingStorage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingStorage", reflect.TypeOf((*MockShortenerServicer)(nil).PingStorage))
}
